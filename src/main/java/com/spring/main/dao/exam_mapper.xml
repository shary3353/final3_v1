<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.spring.main.dao.ExamDAO">
	<insert id="examWrite" 
		useGeneratedKeys="true"
		keyProperty="combrdIdx"
		keyColumn="combrdIdx"
		parameterType="exam">
		INSERT INTO COMPANYBOARD(COMBRDIDX, SUBJECT, CONTENT,COMID) 
		VALUES(COMPANYBOARD_SEQ.NEXTVAL, #{subject}, #{content},#{comId})
	</insert>
	
	<select id="list" resultType="exam">
		SELECT * FROM COMPANYBOARD WHERE blind='N' or blind is null ORDER BY reg_date DESC
	</select>
	
	<insert id="examWriteFile">
		INSERT INTO photos (PHOTOIDX, NEWFILENAME, ORIFILENAME, COMBRDIDX) 
		VALUES (photos_seq.NEXTVAL, #{param1}, #{param2}, #{param3})
	</insert>

	<select id="examDetail" resultType="exam">
	 SELECT COMBRDIDX,SUBJECT,CONTENT,reg_date,bHit,comId FROM COMPANYBOARD WHERE COMBRDIDX=#{combrdIdx}
	</select>
	
	<update id="examUpHit" >
		UPDATE COMPANYBOARD SET bHit=bHit+1 WHERE combrdIdx=#{combrdIdx}
	</update>
	
	<update id= "examUpdate" parameterType="exam">
		UPDATE  COMPANYBOARD SET SUBJECT=#{subject}, CONTENT=#{content}
		WHERE combrdIdx=#{combrdIdx}
	</update>
	
	<update id="groupUpdateFile">
		UPDATE photos  
		SET PHOTOIDX=photos_seq.NEXTVAL, NEWFILENAME=#{param1}, ORIFILENAME =#{param2}  WHERE combrdIdx=#{param3}
	</update>
	
	<select id="examGetFileName" resultType="String">
		SELECT newFileName FROM photos WHERE combrdIdx=#{combrdIdx}
	</select>
	
	<delete id="examPhotoDel">
		DELETE FROM photos WHERE combrdIdx=#{combrdIdx}
	</delete>
	
	<delete id="examDel">
		UPDATE COMPANYBOARD SET blind='y' WHERE combrdIdx=#{combrdIdx}
	</delete>
	
	<select id="interiorCompanyDetail" resultType="exam">
		SELECT * FROM COMPANYMEMBER WHERE COMID=#{param1}
	</select>
	
	<select id="comExamList" resultType="exam">
	SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date,rnum
	FROM( 
	 		SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date, 
	 		ROW_NUMBER() OVER(ORDER BY COMBRDIDX DESC) AS rnum FROM COMPANYBOARD WHERE COMID=#{param3} AND (blind='n' or blind is null)
	 		)
	WHERE rnum between #{param1} AND #{param2}
	</select>
	
	<select id="allCount" resultType="Integer">
		SELECT COUNT(COMBRDIDX) FROM COMPANYBOARD WHERE COMID=#{param1} AND (blind='n' or blind is null)
	</select> 
	
	<select id="allScrollCount" resultType="Integer">
		SELECT COUNT(COMBRDIDX) FROM COMPANYBOARD WHERE (blind='n' or blind is null)
	</select> 
	
	
	<select id="examSemiList" resultType="exam">
		SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date,rnum
	FROM( 
	 		SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date, 
	 		ROW_NUMBER() OVER(ORDER BY COMBRDIDX DESC) AS rnum FROM COMPANYBOARD WHERE COMID=#{param1} AND (blind='n' or blind is null)
	 		)
	WHERE rnum between 1 AND 5
	
	</select>
	
	<select id="reviewSemiList" resultType="review">
	SELECT REVIDX,SUBJECT,CONTENT,RATE,COMID,ID,reg_date,rnum 
	FROM( 
	 		SELECT REVIDX,SUBJECT,CONTENT,RATE,COMID,ID,reg_date, 
	 		ROW_NUMBER() OVER(ORDER BY REVIDX DESC) AS rnum FROM REVIEW WHERE COMID=#{param1}
	 		)
	WHERE rnum between 1 AND 5
	</select>
	
	<select id="examListScroll" resultType="exam">
		SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date,rnum
		FROM( 
	 		SELECT COMBRDIDX,SUBJECT,CONTENT,COMID,reg_date, 
	 		ROW_NUMBER() OVER(ORDER BY COMBRDIDX DESC) AS rnum FROM COMPANYBOARD WHERE (blind='n' or blind is null)
	 		)
		WHERE rnum between 1 AND #{param1}
	
	</select>
	
	<select id="estimateList" resultType="estimate">
	SELECT ESTIDX,BUDGET,ID,reg_date,COMID,rnum 
	FROM( 
	 		SELECT ESTIDX,BUDGET,ID,reg_date,COMID, 
	 		ROW_NUMBER() OVER(ORDER BY ESTIDX DESC) AS rnum FROM ESTIMATE WHERE COMID=#{param3}
	 		)
	WHERE rnum between #{param1} AND #{param2}
	</select>
	
	<select id="reviewrate" resultType="float">
		SELECT AVG(rate) FROM review where comId=#{param1}
	</select>
	
</mapper>
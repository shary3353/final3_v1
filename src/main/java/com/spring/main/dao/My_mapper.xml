<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.spring.main.dao.MyDAO">

<select id="login" resultType="String" parameterType="String">
	SELECT pw FROM generalmember WHERE id = #{loginId}
</select>


<select id="myprofile" resultType="com.spring.main.dto.MyDTO" parameterType="String">
	SELECT * FROM generalmember WHERE id = #{loginId}
</select>

<update id="myupdate"  parameterType="String">
UPDATE generalmember SET name=#{name}
, phone=#{phone}, email=#{email} WHERE id = #{id}
</update>
	
	
<update id="newPw"  parameterType="String">
UPDATE generalmember SET pw=#{pw} WHERE id = #{id}
</update>

 

<!--내가 작성한 자유게시판  -->

<select id="mywriteboardAllCount" resultType="int" parameterType="String">
	SELECT COUNT(BOARDIDX) FROM BOARD WHERE id = #{param1}
</select>
	
<select id="mywriteboardList" resultType="com.spring.main.dto.MyDTO">
SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT rnum 
    FROM (SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT,
    ROW_NUMBER() OVER(ORDER BY BOARDIDX DESC) AS rnum FROM BOARD  WHERE ID=#{param3} AND blind='n'AND brdctgidx = 1)
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>


<!--내가 작성한 꿀팁게시판  -->

<select id="mywritetipAllCount" resultType="int" parameterType="String">
	SELECT COUNT(BOARDIDX) FROM BOARD WHERE id = #{param1}
</select>
	
<select id="mywritetipList" resultType="com.spring.main.dto.MyDTO">
SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT rnum 
    FROM (SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT,
    ROW_NUMBER() OVER(ORDER BY BOARDIDX DESC) AS rnum FROM BOARD  WHERE ID=#{param3} AND blind='n'AND brdctgidx = 3)
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>

<!--내가 작성한 qna게시판  -->
<select id="mywriteqnaAllCount" resultType="int" parameterType="String">
	SELECT COUNT(BOARDIDX) FROM BOARD WHERE id = #{param1}
</select>

<select id="mywriteqnaList" resultType="com.spring.main.dto.MyDTO">
SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT rnum 
    FROM (SELECT BOARDIDX , SUBJECT , CONTENT , ID , REG_DATE, BHIT,
    ROW_NUMBER() OVER(ORDER BY BOARDIDX DESC) AS rnum FROM BOARD  WHERE ID=#{param3} AND blind='n'AND brdctgidx = 4)
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>


<!--내가 작성한 견적서 페이지  -->
<select id="myestimateAllCount" resultType="int" parameterType="String">
	SELECT COUNT(estIdx) FROM ESTIMATE WHERE id = #{param1}
</select>

<select id="myestimateList" resultType="com.spring.main.dto.EstimateDTO">
SELECT estIdx , comId , content , id , budget, REG_DATE, rnum 
    FROM (SELECT estIdx , comId , content , id , budget, REG_DATE,
    ROW_NUMBER() OVER(ORDER BY ESTIDX DESC) AS rnum FROM ESTIMATE  WHERE ID=#{param3})
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>

<select id="estDetail" resultType="com.spring.main.dto.EstimateDTO">
	SELECT * FROM ESTIMATE WHERE estIdx = #{param1}
</select>


<!--내가 작성한 공동구매  -->
<select id="mygroupwriteAllCount" resultType="int" parameterType="String">
	SELECT COUNT(gpIdx) FROM GROUPPURCHASE WHERE id = #{param1}
</select>

<select id="mygroupwriteList" resultType="com.spring.main.dto.GroupDTO">
SELECT gpIdx ,  subject , content , id , progIdx, reg_date, gHit rnum 
    FROM (SELECT gpIdx , subject , content , id , progIdx, reg_date, gHit,
    ROW_NUMBER() OVER(ORDER BY gpIdx DESC) AS rnum FROM GROUPPURCHASE  WHERE ID=#{param3})
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>








<select id="receiverAllCount" resultType="int" parameterType="String">
	SELECT COUNT(msgidx) FROM msg WHERE receiver = #{param1} AND receivedel = 'n'
</select>

<select id="receiveList" resultType="com.spring.main.dto.MsgDTO">
SELECT msgidx , sender , receiver , content , reg_date, rnum 
    FROM (SELECT msgidx , sender , receiver , reg_date, content,
    ROW_NUMBER() OVER(ORDER BY msgidx DESC)  AS rnum FROM msg  WHERE receiver=#{param3} AND receivedel='n')
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>

<select id="senderAllCount" resultType="int" parameterType="String">
	SELECT COUNT(msgidx) FROM msg WHERE sender = #{param1} AND senddel = 'n'
</select>

<select id="senderList" resultType="com.spring.main.dto.MsgDTO">
SELECT msgidx , sender , receiver , content , reg_date, rnum 
    FROM (SELECT msgidx , sender , receiver , reg_date, content,
    ROW_NUMBER() OVER(ORDER BY msgidx DESC)  AS rnum FROM msg  WHERE sender=#{param3} AND senddel='n')
    WHERE rnum BETWEEN #{param1} AND #{param2}
</select>

<select id="msgDetail" resultType="com.spring.main.dto.MsgDTO">
	SELECT * FROM msg WHERE msgIdx = #{param1}
</select>

<select id="whoSR" resultType="com.spring.main.dto.MsgDTO">
	SELECT sender , receiver FROM msg WHERE msgIdx=#{param1}
</select>

<update id="deleteSender" parameterType="int">
	UPDATE msg SET senddel = 'y' WHERE msgIdx = #{param1}
</update>

<update id="deleteReceiver" parameterType="int">
	UPDATE msg SET receivedel = 'y' WHERE msgIdx = #{param1}
</update>

<select id="receiverChk" resultType="int">
	SELECT COUNT(id) FROM generalmember WHERE id=#{param1}
</select>

<insert id="sendMsg" parameterType="hashmap">
	INSERT INTO msg (msgidx, sender, receiver , content )values(MSG_SEQ.NEXTVAL,  #{sender} , #{receiver} , #{content})
</insert>

</mapper>
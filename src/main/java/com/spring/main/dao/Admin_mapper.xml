<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.spring.main.dao.AdminDAO">
	<select id="listNewMember" resultType="com.spring.main.dto.MemberDTO">
		SELECT id FROM generalmember WHERE reg_date LIKE2 TO_DATE(#{param1}, 'yy/mm/dd')
	</select>
	
	<select id="cntNewMember" resultType="int">
		SELECT COUNT(id) cnt FROM generalmember WHERE reg_date LIKE2 TO_DATE(#{param1}, 'yy/mm/dd')
	</select>
	
	<select id="cntNewAdmin" resultType="int">
		SELECT COUNT(adminId) cnt FROM admin
	</select>
	
	<select id="listAdmin" resultType="com.spring.main.dto.AdminDTO">
		SELECT adminid FROM admin
	</select>
	
	<select id="reportedBrdCnt" resultType="int">
		SELECT COUNT(repidx) FROM reports WHERE repctgidx = 11 OR repctgidx = 12 OR repctgidx = 13 OR repctgidx = 14
	</select>
	
	<select id="reportedBrdList" resultType="hashMap">
		SELECT b.rnum, b.subject, r.repctgidx FROM 
			(SELECT ROW_NUMBER() OVER(ORDER BY boardidx DESC) AS rnum, boardidx, subject FROM board) b, reports r 
			WHERE r.boardidx = b.boardidx AND b.rnum BETWEEN 1 AND 3
	</select>
	
	<select id="reportedCommCnt" resultType="int">
		SELECT COUNT(commidx) FROM reports WHERE repctgidx = 11 OR repctgidx = 12 OR repctgidx = 13 OR repctgidx = 14
	</select>
	
	<select id="reportedCommList" resultType="photo">
		SELECT c.rnum, c.comments, r.repctgidx 
		    FROM (SELECT ROW_NUMBER() OVER(ORDER BY commidx DESC) AS rnum, commidx, comments FROM comments) c,reports r 
		    WHERE r.commidx = c.commidx AND c.rnum BETWEEN 1 AND 3
	</select>
	
	<select resultType="com.spring.main.dto.MemberDTO" id="adminMemberList">
		SELECT m.rnum, m.id, g.grade, m.stateIdx, m.reg_date 
	    FROM membergrade g cross join 
	        (SELECT ROW_NUMBER() OVER(ORDER BY reg_date DESC) AS rnum, id, gradeidx ,stateidx , reg_date FROM generalmember) m
	        <if test = "param3 == 0 and param4 == 0 and param5 == 'none'">
			    WHERE g.gradeidx = m.gradeidx AND rnum BETWEEN #{param1} AND #{param2} order by m.rnum asc
	        </if>
	        <if test = "param3 == 1 || param3 == 2 || param3 == 3 || param3 == 4 || param3 == 5">
	        	WHERE g.gradeidx = m.gradeidx AND g.gradeidx=#{param3} AND rnum BETWEEN #{param1} AND #{param2} order by m.rnum asc
	        </if>
	        <if test = "param4 == 1 || param4 == 2 || param4 == 3 || param4 == 4 || param4 == 5 || param4 == 6 || param4 == 7"  >
	        	WHERE g.gradeidx = m.gradeidx AND m.stateidx = #{param4} AND rnum BETWEEN #{param1} AND #{param2} order by m.rnum asc
	        </if>
	        <if test = "param5 != 'none'">
	        	WHERE g.gradeidx = m.gradeidx AND m.id = #{param5} AND rnum BETWEEN #{param1} AND #{param2} order by m.rnum asc
	        </if>
	</select>
	
	<select resultType="int" id="memberMaxCnt">
		SELECT COUNT(id) FROM generalmember
			<if test = "param1 != 0">
				WHERE gradeIdx = #{param1}
			</if>
			<if test = "param2 != 0">
				WHERE stateIdx = #{param2}
			</if>
			<if test = "param3 != 'none'">
				WHERE id = #{param3}
			</if>			
	</select>
	
	<select id="memberDetail" resultType="com.spring.main.dto.MemberDTO">
		SELECT * FROM generalmember WHERE id=#{param1}
	</select>
	
	<update id="penaltyCfm">
		UPDATE generalmember SET stateIdx = #{param2} WHERE id = #{param1}
	</update>
	
	<select id="adminCompanyList" resultType="com.spring.main.dto.CompanyMemberDTO"> 
		SELECT ROW_NUMBER() OVER(ORDER BY reg_date DESC) AS rnum, comid,comname, license, phone, reg_date FROM companymember 
		<if test = "param3 != 'none'">
			WHERE comid = #{param3}
		</if>
	</select>
	<select resultType="int" id="companyMaxCnt" parameterType="hashMap">
		SELECT COUNT(comid) FROM companymember
			<if test = "searchId != 'none'">
				WHERE comid = #{searchId}
			</if>
	</select>
	<select id="companyDetail" resultType="com.spring.main.dto.CompanyMemberDTO">
		SELECT comName, comid, license, phone, reg_date, r.rate, r.cnt
    		FROM (SELECT AVG(rate) rate, COUNT(revidx) cnt FROM review WHERE comid=#{param1}) r, companymember c WHERE comid=#{param1}
	</select>
</mapper>